#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147                       #
#------------------------------------------------------------------------------#


WORKDIR = `pwd`

CC = gcc
CXX = g++
AR = ar
LD = g++
WINDRES = windres

INC = 
CFLAGS = -std=c++11 -Wall -v `pkg-config --cflags libmongocxx` -Wl,-rpath /usr/local/lib
RESINC = 
LIBDIR = 
LIB = 
LDFLAGS = `pkg-config --libs libmongocxx` -Wl,-rpath /usr/local/lib

INC_DEBUG = $(INC) -I../../../../../../usr/include/libusb-1.0 -I../Robot/Serial_wjwwood/include/
CFLAGS_DEBUG = $(CFLAGS) -g
RESINC_DEBUG = $(RESINC)
RCFLAGS_DEBUG = $(RCFLAGS)
LIBDIR_DEBUG = $(LIBDIR)
LIB_DEBUG = $(LIB)lib/libfreenect.a lib/libfreenect.so ../../../../../../usr/lib/arm-linux-gnueabihf/libusb-1.0.so
LDFLAGS_DEBUG = $(LDFLAGS) -pthread -lusb-1.0 -lmongocxx -lbsoncxx
OBJDIR_DEBUG = obj/Debug
DEP_DEBUG = 
OUT_DEBUG = bin/Debug/balayeuse

INC_RELEASE = $(INC) -I../../../../../../usr/include/libusb-1.0 -I../Robot/Serial_wjwwood/include/
CFLAGS_RELEASE = $(CFLAGS) -O2 `pkg-config --libs libmongocxx` `pkg-config --cflags libmongocxx`
RESINC_RELEASE = $(RESINC)
RCFLAGS_RELEASE = $(RCFLAGS)
LIBDIR_RELEASE = $(LIBDIR)
LIB_RELEASE = $(LIB)lib/libfreenect.a lib/libfreenect.so ../../../../../../usr/lib/arm-linux-gnueabihf/libusb-1.0.so
LDFLAGS_RELEASE = $(LDFLAGS) -s -pthread -lusb-1.0
OBJDIR_RELEASE = obj/Release
DEP_RELEASE = 
OUT_RELEASE = bin/Release/balayeuse

OBJ_DEBUG = $(OBJDIR_DEBUG)/Matrices.o $(OBJDIR_DEBUG)/cpp_pc_view.o $(OBJDIR_DEBUG)/SceneCamera.o $(OBJDIR_DEBUG)/MyFreenectDevice.o $(OBJDIR_DEBUG)/Mutex.o $(OBJDIR_DEBUG)/Carte.o $(OBJDIR_DEBUG)/Main.o $(OBJDIR_DEBUG)/Decodeur.o $(OBJDIR_DEBUG)/Convertisseur.o $(OBJDIR_DEBUG)/Config.o $(OBJDIR_DEBUG)/CloudPointContainer.o

OBJ_RELEASE = $(OBJDIR_RELEASE)/Matrices.o $(OBJDIR_RELEASE)/cpp_pc_view.o $(OBJDIR_RELEASE)/SceneCamera.o $(OBJDIR_RELEASE)/MyFreenectDevice.o $(OBJDIR_RELEASE)/Mutex.o $(OBJDIR_RELEASE)/Carte.o $(OBJDIR_RELEASE)/Main.o $(OBJDIR_RELEASE)/Decodeur.o $(OBJDIR_RELEASE)/Convertisseur.o $(OBJDIR_RELEASE)/Config.o $(OBJDIR_RELEASE)/CloudPointContainer.o

all: debug release

clean: clean_debug clean_release

before_debug: 
	@echo "Debug de generation en mode debug"
	test -d bin/Debug || mkdir -p bin/Debug
	test -d $(OBJDIR_DEBUG) || mkdir -p $(OBJDIR_DEBUG)

after_debug: 
	@echo "Fin de generation en mode debug"

debug: before_debug out_debug after_debug

out_debug: before_debug $(OBJ_DEBUG) $(DEP_DEBUG)
	$(LD) $(LIBDIR_DEBUG) -o $(OUT_DEBUG) $(OBJ_DEBUG)  $(LDFLAGS_DEBUG) $(LIB_DEBUG)

$(OBJDIR_DEBUG)/Matrices.o: Matrices.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Matrices.cpp -o $(OBJDIR_DEBUG)/Matrices.o

$(OBJDIR_DEBUG)/cpp_pc_view.o: cpp_pc_view.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c cpp_pc_view.cpp -o $(OBJDIR_DEBUG)/cpp_pc_view.o

$(OBJDIR_DEBUG)/SceneCamera.o: SceneCamera.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c SceneCamera.cpp -o $(OBJDIR_DEBUG)/SceneCamera.o

$(OBJDIR_DEBUG)/MyFreenectDevice.o: MyFreenectDevice.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c MyFreenectDevice.cpp -o $(OBJDIR_DEBUG)/MyFreenectDevice.o

$(OBJDIR_DEBUG)/Mutex.o: Mutex.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Mutex.cpp -o $(OBJDIR_DEBUG)/Mutex.o

$(OBJDIR_DEBUG)/Carte.o: Carte.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Carte.cpp -o $(OBJDIR_DEBUG)/Carte.o

$(OBJDIR_DEBUG)/Main.o: Main.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Main.cpp -o $(OBJDIR_DEBUG)/Main.o

$(OBJDIR_DEBUG)/Decodeur.o: Decodeur.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Decodeur.cpp -o $(OBJDIR_DEBUG)/Decodeur.o

$(OBJDIR_DEBUG)/Convertisseur.o: Convertisseur.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Convertisseur.cpp -o $(OBJDIR_DEBUG)/Convertisseur.o

$(OBJDIR_DEBUG)/Config.o: Config.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Config.cpp -o $(OBJDIR_DEBUG)/Config.o

$(OBJDIR_DEBUG)/CloudPointContainer.o: CloudPointContainer.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c CloudPointContainer.cpp -o $(OBJDIR_DEBUG)/CloudPointContainer.o

clean_debug: 
	rm -f $(OBJ_DEBUG) $(OUT_DEBUG)
	rm -rf bin/Debug
	rm -rf $(OBJDIR_DEBUG)

before_release: 
	@echo "Debut de generation en mode release"
	test -d bin/Release || mkdir -p bin/Release
	test -d $(OBJDIR_RELEASE) || mkdir -p $(OBJDIR_RELEASE)

after_release: 
	@echo "Fin de generation en mode release"

release: before_release out_release after_release

out_release: before_release $(OBJ_RELEASE) $(DEP_RELEASE)
	$(LD) $(LIBDIR_RELEASE) -o $(OUT_RELEASE) $(OBJ_RELEASE)  $(LDFLAGS_RELEASE) $(LIB_RELEASE)

$(OBJDIR_RELEASE)/Matrices.o: Matrices.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Matrices.cpp -o $(OBJDIR_RELEASE)/Matrices.o

$(OBJDIR_RELEASE)/cpp_pc_view.o: cpp_pc_view.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c cpp_pc_view.cpp -o $(OBJDIR_RELEASE)/cpp_pc_view.o

$(OBJDIR_RELEASE)/SceneCamera.o: SceneCamera.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c SceneCamera.cpp -o $(OBJDIR_RELEASE)/SceneCamera.o

$(OBJDIR_RELEASE)/MyFreenectDevice.o: MyFreenectDevice.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c MyFreenectDevice.cpp -o $(OBJDIR_RELEASE)/MyFreenectDevice.o

$(OBJDIR_RELEASE)/Mutex.o: Mutex.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Mutex.cpp -o $(OBJDIR_RELEASE)/Mutex.o

$(OBJDIR_RELEASE)/Carte.o: Carte.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Carte.cpp -o $(OBJDIR_RELEASE)/Carte.o

$(OBJDIR_RELEASE)/Main.o: Main.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Main.cpp -o $(OBJDIR_RELEASE)/Main.o

$(OBJDIR_RELEASE)/Decodeur.o: Decodeur.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Decodeur.cpp -o $(OBJDIR_RELEASE)/Decodeur.o

$(OBJDIR_RELEASE)/Convertisseur.o: Convertisseur.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Convertisseur.cpp -o $(OBJDIR_RELEASE)/Convertisseur.o

$(OBJDIR_RELEASE)/Config.o: Config.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Config.cpp -o $(OBJDIR_RELEASE)/Config.o

$(OBJDIR_RELEASE)/CloudPointContainer.o: CloudPointContainer.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c CloudPointContainer.cpp -o $(OBJDIR_RELEASE)/CloudPointContainer.o

clean_release: 
	rm -f $(OBJ_RELEASE) $(OUT_RELEASE)
	rm -rf bin/Release
	rm -rf $(OBJDIR_RELEASE)

.PHONY: before_debug after_debug clean_debug before_release after_release clean_release

